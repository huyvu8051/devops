pipeline {
    agent none

    stages {
        stage('Trigger wol-xeon Pipeline') {
            agent { label 'wol-sender' }
            steps {
                build job: 'wol-xeon', wait: true
            }
        }

        stage('Build and Deploy') {
            agent { label 'graalvm-native-image' }
            stages {
                stage('Clone Repository') {
                    steps {
                        git url: 'https://github.com/huyvu8051/tiptalk.git', branch: 'main', credentialsId: 'my-git-credentials'
                    }
                }

                stage('Build Images') {
                    parallel {
                        stage('Backend') {
                            stages {
                                stage('Build Backend Image') {
                                    steps {
                                        dir('tiptalk-back') {
                                            sh '''
                                            mvn clean -X
                                            mvn -Pnative -Dspring-boot.build-image.imageName=tiptalk-native:latest spring-boot:build-image -Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSSZ
                                            '''
                                        }
                                    }
                                }
                                stage('Push Backend Image') {
                                    steps {
                                        withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                                            sh '''
                                            docker tag tiptalk-native:latest huyvu8051/tiptalk-native:latest
                                            docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
                                            docker push huyvu8051/tiptalk-native:latest
                                            '''
                                        }
                                    }
                                }
                                
                                stage('Trigger Render Deployment') {
                                    steps {
                                        sh 'curl -X GET https://api.render.com/deploy/srv-d0etruemcj7s7387v980?key=WU5nW2vD3fY'
                                        sh 'curl -X GET https://api.render.com/deploy/srv-d151cq3e5dus7395ib60?key=_Bi7X--llVY'
                                    }
                                }
                            }
                        }
                        stage('Frontend') {
                            stages {
                                stage('Build Frontend Image') {
                                    steps {
                                        dir('tiptalk-front') {
                                            sh '''
                                            npm i --loglevel verbose
                                            npm run build --verbose --prod
                                            docker build -t huyvu8051/tiptalk-front:latest .
                                            '''
                                        }
                                    }
                                }
                                stage('Push Frontend Image') {
                                    steps {
                                        withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                                            sh '''
                                            docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
                                            docker push huyvu8051/tiptalk-front:latest
                                            '''
                                        }
                                    }
                                }
                                stage('Deploy Frontend to GitHub Pages') {
                                    steps {
                                        dir('tiptalk-front/dist/tiptalk-front/browser') {
                                            sh 'cp index.html 404.html'
                                            sh 'echo "tiptalk.huyvu.asia" > CNAME'
                                            withCredentials([usernamePassword(credentialsId: 'my-git-credentials', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                                                sh '''
                                                git init
                                                git config user.name "Jenkins"
                                                git config user.email "jenkins@ci-server"
                                                git add .
                                                git commit -m "Deploy frontend artifacts to GitHub Pages"
                                                git remote add origin https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/huyvu8051/tiptalk-front-ghp.git
                                                git push --force origin HEAD:main
                                                '''
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

                
            }
        }
    }

    post {
        success {
            node('graalvm-native-image') {
                dir('tiptalk-back') {
                    junit 'target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'target/*.jar'
                }
                dir('tiptalk-front') {
                    archiveArtifacts 'dist/**/*'
                }
            }
        }
    }
}
