pipeline {
    agent { label 'graalvm-native-image' }

    stages {
        stage('Clone Repository') {
            steps {
                // Get some code from a GitHub repository
                git url: 'https://github.com/huyvu8051/light-message.git', branch: 'master', credentialsId: 'my-git-credentials'
            }
        }

        stage('Build Image') {
            steps {
                // Run Maven on a Unix agent.
                withCredentials([usernamePassword(credentialsId: 'nexus-credentials', usernameVariable: 'MAVEN_USERNAME', passwordVariable: 'MAVEN_PASSWORD')]) {
                    sh "mvn clean -T 1C -DskipTests -Pnative -Dspring-boot.build-image.imageName=light-message-native:latest spring-boot:build-image -s settings.xml -Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSSZ"
                }
            }
        }

        stage('Docker Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh "docker tag light-message-native huyvu8051/light-message-native:latest"
                    sh 'docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"'
                    sh "docker push huyvu8051/light-message-native:latest"
                }
            }
        }

        stage('Trigger Render Deployment') {
            steps {
                sh 'curl -X GET https://api.render.com/deploy/srv-d0etruemcj7s7387v980?key=WU5nW2vD3fY'
            }
        }
    }

    post {
        success {
            // junit '**/target/surefire-reports/TEST-*.xml'

            archiveArtifacts 'target/*.jar'
        }
    }
}

